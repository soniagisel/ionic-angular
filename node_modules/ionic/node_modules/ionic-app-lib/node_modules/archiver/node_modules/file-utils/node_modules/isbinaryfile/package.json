{
  "_args": [
    [
      "isbinaryfile@https://registry.npmjs.org/isbinaryfile/-/isbinaryfile-0.1.9.tgz",
      "/Users/Sonia/Desktop/ionic-angular/node_modules/ionic/node_modules/ionic-app-lib/node_modules/archiver/node_modules/file-utils"
    ]
  ],
  "_from": "isbinaryfile@>=0.1.9 <0.2.0",
  "_id": "isbinaryfile@0.1.9",
  "_inCache": true,
  "_location": "/ionic/ionic-app-lib/archiver/file-utils/isbinaryfile",
  "_phantomChildren": {},
  "_requested": {
    "name": "isbinaryfile",
    "raw": "isbinaryfile@https://registry.npmjs.org/isbinaryfile/-/isbinaryfile-0.1.9.tgz",
    "rawSpec": "https://registry.npmjs.org/isbinaryfile/-/isbinaryfile-0.1.9.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/isbinaryfile/-/isbinaryfile-0.1.9.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/ionic/ionic-app-lib/archiver/file-utils"
  ],
  "_resolved": "https://registry.npmjs.org/isbinaryfile/-/isbinaryfile-0.1.9.tgz",
  "_shasum": "15eece35c4ab708d8924da99fb874f2b5cc0b6c4",
  "_shrinkwrap": null,
  "_spec": "isbinaryfile@https://registry.npmjs.org/isbinaryfile/-/isbinaryfile-0.1.9.tgz",
  "_where": "/Users/Sonia/Desktop/ionic-angular/node_modules/ionic/node_modules/ionic-app-lib/node_modules/archiver/node_modules/file-utils",
  "bugs": {
    "url": "https://github.com/gjtorikian/isBinaryFile/issues"
  },
  "dependencies": {},
  "description": "Detects if a file is binary in Node.js. Similar to Perl's -B.",
  "devDependencies": {
    "mocha": ""
  },
  "engines": {
    "node": ">=0.6.0"
  },
  "homepage": "https://github.com/gjtorikian/isBinaryFile#readme",
  "main": "./lib/panino.js",
  "maintainers": [
    {
      "name": "Garen J. Torikian",
      "email": "gjtorikian@gmail.com"
    }
  ],
  "name": "isbinaryfile",
  "optionalDependencies": {},
  "readme": "isBinaryFile\n============\n\nDetects if a file is binary in Node.js. Similar to [Perl's `-B` switch](http://stackoverflow.com/questions/899206/how-does-perl-know-a-file-is-binary), in that:\n\n* it reads the first few thousand bytes of a file\n* checks for a `null` byte; if it's found, it's binary\n* flags non-ASCII characters. After a certain number of \"weird\" characters, the file is flagged as binary\n\nAll the logic is also pretty much ported from [ag](https://github.com/ggreer/the_silver_searcher).\n\nNote: if the file doesn't exist or it is empty, this function returns `false`.\n\n## Installation\n\n```\nnpm install isBinaryFile\n```\n\n## Usage\n\nIf you pass in one argument, this module assumes it's just the file path, and performs the appropriate file read and stat functionality internally:\n\n```javascript\nvar isBinaryFile = require(\"isbinaryfile\");\n\nif (isBinaryFile(process.argv[2]))\n\tconsole.log(\"It is!\")\nelse\n\tconsole.log(\"No.\")\n```\n\nTa da. \n\n\nHowever, if you've already read and `stat()`-ed a file (for some other reason), you can pass in both the file's raw data and the stat's `size` info to save time:\n\n```javascript\nfs.readFile(process.argv[2], function(err, data) {\n\tfs.lstat(process.argv[2], function(err, stat) {\n\t\tif (isBinaryFile(data, stat))\n\t\t\tconsole.log(\"It is!\")\n\t\telse\n\t\t\tconsole.log(\"No.\")\n\t});\n});\n```\n\n## Testing\n\nInstall mocha on your machine:\n\n```\nnpm install mocha -g\n```\n\nThen go into the _tests_ directory, and type `mocha test.js`.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/gjtorikian/isBinaryFile.git"
  },
  "scripts": {
    "test": "mocha tests/test.js"
  },
  "version": "0.1.9"
}
